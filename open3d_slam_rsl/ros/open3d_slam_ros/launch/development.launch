<?xml version="1.0" encoding="UTF-8"?>

<launch>

  <!-- Arguments -->
  <arg name="launch_prefix" default="gdb -ex run --args" doc="gdb -ex run --args , valgrind --leak-check=full"/>
  <arg name="launch_rviz" default="true"/>
  <arg name="replay_packets" default="false"/>
  <arg name="launch_tf" default="false"/>
  <arg name="load_params" default="y" doc="y , n"/>
  <arg name="robot_description_file_path" default="/home/tutuna/Music/20230327_ETH_Cerberus_global_localization/2023-03-27-13-48-57_anymal-cerberus-lpc_mission.yaml"/>
  
  <!-- MANDATORY PARAMETERS TO DEFINE -->
  <!-- Common Options:  -->
  <!--        /point_cloud_filter/lidar_depth_camera/point_cloud_filtered   -->
  <!--        /lidar/point_cloud  -->
  <!--        /point_cloud_filter/lidar/point_cloud_filtered -->
  <!--        /hesai/pandar  -->
  <arg name="cloud_topic" default="/point_cloud_filter/lidar/point_cloud_filtered"/> <!-- /point_cloud_filter/lidar_depth_camera/point_cloud_filtered  /lidar/point_cloud -->
  
  <!-- The tracked frame of the External odometry. Transformation from this frame to tracked_sensor_Frame should exist. -->
  <!-- Reads as `pose of base in external odometry frame` -->
  <!-- Common Options:  -->
  <!--   base   -->
  <!--   zed2i_base_link  -->
  <arg name="assumed_external_odometry_tracked_frame" default="base"/>

  <!-- Currently only used for attitude initialization -->
  <!-- Common Options:  -->
  <!--   /imu_perception_kit   -->
  <!--   /sensors/imu  -->
  <arg name="imu_topic" default="/sensors/imu"/>

  <!-- Common Options:  -->
  <!--   /zed2i/zed_node/odom  -->
  <!--   /state_estimator/odometry  -->
  <arg name="odometry_topic" default="/zed2i/zed_node/odom"/> <!-- /point_cloud_filter/lidar_depth_camera/odometry_pose -->
  
  <arg name="pose_stamped_topic" default="/point_cloud_filter/lidar_depth_camera/odometry_pose"/> <!-- /point_cloud_filter/lidar_depth_camera/odometry_pose -->
  
  <!-- Common Options:  -->
  <!--   /state_estimator/pose_in_odom   -->
  <arg name="pose_stamped_with_covariance_topic" default="/state_estimator/pose_in_odom"/> <!-- /point_cloud_filter/lidar_depth_camera/odometry_pose -->

  <arg name="parameter_filename" default="param_velodyne_puck16.lua"/>
  <arg name="parameter_folder_path" default="$(find open3d_slam_ros)/param/"/>
  <arg name="map_saving_folder" default="$(find open3d_slam_ros)/data/maps/"/>
  <arg name="num_accumulated_range_data" default="1"/>

  <!-- Replay Options -->
  <arg name="is_read_from_rosbag" default="false"/>
  <arg name="rosbag_filepath" default="/home/tutuna/Music/evo/procesed.bag"/>
  <arg name="use_syncronized_poses_to_replay" default="false"/>
  <arg name="replay_start_time_as_second" default="0.0"/>
  <arg name="replay_end_time_as_second" default="3000.0"/>

  <arg name="use_sim_time" default="true"/>

  <!-- ROS Param -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- Main Node -->
  <node name="open3d_slam" pkg="open3d_slam_ros"
        type="mapping_node" output="screen"
        launch-prefix="$(arg launch_prefix)">
    <param name="cloud_topic" type="string" value="$(arg cloud_topic)"/>

    <param name="odometry_topic" type="string" value="$(arg odometry_topic)"/>
    <param name="pose_stamped_topic" type="string" value="$(arg pose_stamped_topic)"/>
    <param name="pose_stamped_with_covariance_topic" type="string" value="$(arg pose_stamped_with_covariance_topic)"/>

    <param name="parameter_folder_path" type="string"
           value="$(arg parameter_folder_path)"/>

    <param name="imu_topic" type="string" value="$(arg imu_topic)"/>

    <param name="assumed_external_odometry_tracked_frame" type="string"
           value="$(arg assumed_external_odometry_tracked_frame)"/>

    <param name="use_syncronized_poses_to_replay" type="bool"
           value="$(arg use_syncronized_poses_to_replay)"/>

    <param name="replay_start_time_as_second" type="double"
           value="$(arg replay_start_time_as_second)"/>

    <param name="replay_end_time_as_second" type="double"
           value="$(arg replay_end_time_as_second)"/>

    <param name="parameter_filename" type="string"
           value="$(arg parameter_filename)"/>
    <param name="num_accumulated_range_data"
           value="$(arg num_accumulated_range_data)"/>
    <param name="is_read_from_rosbag" value="$(arg is_read_from_rosbag)"/>
    <param name="rosbag_filepath" value="$(arg rosbag_filepath)"/>
    <param name="map_saving_folder" value="$(arg map_saving_folder)"/>
  </node>

  <!-- Visualization -->
  <include
      file="$(find open3d_slam_ros)/launch/vis.launch"
      if="$(arg launch_rviz)">
  </include>

  <!-- Robot Description & Parameter Loading -->
  <group if="$(eval load_params == 'y')">
       <rosparam command="load" file="$(arg robot_description_file_path)" />
  </group>

    <!-- Anymal tf publisher, you are responsible to load the robot description. -->
  <include 
       file="$(find anymal_tf_publisher)/launch/anymal_tf_publisher.launch"
       if="$(arg launch_tf)">
  </include>

  <!-- Packets Replay -->
  <include
      file="$(find open3d_slam_ros)/launch/velodyne_packets_to_clouds.launch"
      if="$(arg replay_packets)">
  </include>

</launch>