<?xml version="1.0" encoding="UTF-8"?>

<launch>

  <!-- Arguments -->
  <arg name="launch_rviz" default="true"/>

  <!-- Must be set by the user -->
  <arg name="rosbag_filepath" default="/home/ttuna/dlio_ws/data_terrrace/make_jonas_happy_o3d_slam/merged_for_o3d.bag"/>
  <arg name="cloud_topic" default="/dlio/deskewed_point_cloud"/>
  <arg name="async_pose_topic" default="/gt_box/zed2i/zed_node/odom"/> <!-- /gt_box/inertial_explorer/odometry    /gt_box/zed2i/zed_node/odom    /state_estimator/pose_in_odom  /state_estimator/odometry /zed2i/zed_node/odom -->
  <arg name="map_saving_folder" default="$(find open3d_slam_ros)/data/maps/"/>

  <arg name="replay_start_time_as_second" default="0.0"/>
  <arg name="replay_end_time_as_second" default="270.0"/> <!-- Seconds into the bag  -->


  <!--  YOU DONT NEED TO TOUCH REST -->
  <!--  YOU DONT NEED TO TOUCH REST -->
  <!--  YOU DONT NEED TO TOUCH REST -->
  <!--  YOU DONT NEED TO TOUCH REST -->

  <arg name="odometry_topic" default=""/>
  <arg name="pose_stamped_topic" default=""/> 
  <arg name="pose_stamped_with_covariance_topic" default=""/> 
  <arg name="parameter_filename" default="param_velodyne_puck16_replay.lua"/>
  <arg name="parameter_folder_path" default="$(find open3d_slam_ros)/param/"/>
  <arg name="num_accumulated_range_data" default="1"/>
  
  <!-- Replay Options -->
  <arg name="is_read_from_rosbag" default="true"/>
  <arg name="use_syncronized_poses_to_replay" default="false"/>
  <arg name="republish_tf_topic" default="true"/>
  <arg name="relative_sleep_duration" default="0.0"/>

  
  <arg name="assumed_external_odometry_tracked_frame" default=""/> <!-- base_link This is used to find the transformation to the "tracked_sensor_frame" -->
  <arg name="export_imu_data" default="false"/> <!-- This is used to export the IMU data from the rosbag. Also sleeps 10s. -->

  <!-- ROS Param -->
  <arg name="use_sim_time" default="true"/>
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>
  <param name="use_sim_time" value="$(arg use_sim_time)"/>

  <arg name="launch_prefix" default="" doc="gdb -ex run --args"/>
  <!-- Main Node -->
  <node name="open3d_slam" pkg="open3d_slam_ros"
        type="mapping_node" output="screen"
        launch-prefix="$(arg launch_prefix)">
    <param name="cloud_topic" type="string" value="$(arg cloud_topic)"/>

    <param name="odometry_topic" type="string" value="$(arg odometry_topic)"/>
    <param name="pose_stamped_topic" type="string" value="$(arg pose_stamped_topic)"/>
    <param name="pose_stamped_with_covariance_topic" type="string" value="$(arg pose_stamped_with_covariance_topic)"/>

    <param name="parameter_folder_path" type="string"
           value="$(arg parameter_folder_path)"/>

    <param name="assumed_external_odometry_tracked_frame" type="string"
           value="$(arg assumed_external_odometry_tracked_frame)"/>

    <param name="async_pose_topic" type="string"
           value="$(arg async_pose_topic)"/>

    <param name="export_imu_data" type="bool"
           value="$(arg export_imu_data)"/>

    <param name="use_syncronized_poses_to_replay" type="bool"
           value="$(arg use_syncronized_poses_to_replay)"/>

    <param name="republish_tf_topic" type="bool"
           value="$(arg republish_tf_topic)"/>

    <param name="relative_sleep_duration" type="double"
           value="$(arg relative_sleep_duration)"/>

    <param name="replay_start_time_as_second" type="double"
           value="$(arg replay_start_time_as_second)"/>

    <param name="replay_end_time_as_second" type="double"
           value="$(arg replay_end_time_as_second)"/>

    <param name="parameter_filename" type="string"
           value="$(arg parameter_filename)"/>
    <param name="num_accumulated_range_data"
           value="$(arg num_accumulated_range_data)"/>
    <param name="is_read_from_rosbag" value="$(arg is_read_from_rosbag)"/>
    <param name="rosbag_filepath" value="$(arg rosbag_filepath)"/>
    <param name="map_saving_folder" value="$(arg map_saving_folder)"/>
  </node>

  <!-- Visualization -->
  <include
      file="$(find open3d_slam_ros)/launch/vis.launch"
      if="$(arg launch_rviz)">
  </include>

</launch>